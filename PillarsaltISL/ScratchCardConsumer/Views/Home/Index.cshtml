@model PaginatedResponse<IEnumerable<ScratchCardViewModel>>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Scratch Cards</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/custom-styles.css" />
</head>
<body>
    <div class="container">
        <h2>Generated Scratch Cards</h2>

        <div class="card-container">
            @if (Model.Data.Data.Any())
            {
                @foreach (var card in Model.Data.Data)
                {
                    <div class="card">
                        <div class="card-title">Serial Number: @card.SerialNumber</div>
                        <div class="card-content">
                            <p><strong>PIN:</strong> @card.Pin</p>
                            <p><strong>Used:</strong> @card.IsUsed</p>
                            <p><strong>Purchased:</strong> @card.IsPurchased</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No cards found.</p>
            }
        </div>

        @if (Model.Data.TotalCount > Model.Data.PerPage)
        {
            var totalPages = (int)Math.Ceiling((double)Model.Data.TotalCount / Model.Data.PerPage);

            var startPage = Math.Max(1, Model.Data.CurrentPage - 5);
            var endPage = Math.Min(totalPages, Model.Data.CurrentPage + 5);

            <div class="pagination">
                @if (Model.Data.CurrentPage > 1)
                {
                    <a href="@Url.Action("Index", new { page = Model.Data.CurrentPage - 1, perPage = Model.Data.PerPage })" class="page-link">&laquo;</a>
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <a href="@Url.Action("Index", new { page = i, perPage = Model.Data.PerPage })" class="page-link @(i == Model.Data.CurrentPage ? "active" : "")">@i</a>
                }

                @if (Model.Data.CurrentPage < totalPages)
                {
                    <a href="@Url.Action("Index", new { page = Model.Data.CurrentPage + 1, perPage = Model.Data.PerPage })" class="page-link">&raquo;</a>
                }
            </div>
        }
    </div>
</body>
</html>
